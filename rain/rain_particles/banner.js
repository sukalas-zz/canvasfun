var bannerboy = bannerboy || {};bannerboy.main = function() {	var width = window.innerWidth;	var height = window.innerHeight;	var banner = bannerboy.createElement({id: "banner", width: width, height: height, backgroundColor: "black", overflow: "hidden", cursor: "pointer", parent: document.body});	var particle_images = [			"drop3.png",			"drop2.png",			"drop.png",	];	var stats = new Stats();	var dAd = false;	stats.setMode(0);	document.body.appendChild(stats.domElement);	bannerboy.preloadImages(particle_images, function() {			var particles = new bannerboy.ParticleSystem({			images: [				"drop3.png",				"drop2.png",				"drop.png",			],			rotation: 0.01,			mass:0,			scale:0.075,			lifespan: 1.3,			wind:0.15,			particlesPerSecond: 2500,			gravity: 0.7,			opacity: 0.4,			// rotationSpeed: -0.001,			areaPadding: 100,			turbulence: .3,			vx: 0,			vy: 5,			emitter: {x: -450, y: -10, width: width+450, height: 10},			onUpdateParticles: function() {				stats.begin();				stats.end();				// particles.rotation = Math.random() * (45 - 20) + 0;				// console.log("particles.rotation = " +particles.rotation)			},			onUpdateParticle: function(p) {				// var randSpeedY  = Math.random() * 0.40 + 0.25; // Splash bounce height				var randOpacity  = Math.random() * 0.25 + 0.05; // Splash bounce height				var randSpeedY  = 0.07 // Splash bounce height				var randSpeedX  = Math.random() * 2 + 1.1; // Splash bounce distance right or left				var bounceRotation = 3.6; // 0 is Vertical and 7 is horizontal				var ageArr = [];				fadeOut = bannerboy.utils.map(p.age, 1, 64, 0, 1);				p.scale =  p.y/11000				p.opacity =  randOpacity;				// console.log(fadeOut)				// console.log(p.age)				// p.wind = mouse.wind;				if(p.y+30 >= height){					 // p.opacity = 1 - fadeOut;					 p.opacity = .05;					 p.scale = p.scale - 0.01;					 p.vy *= - randSpeedY; 					 dAd = !dAd;					 if(dAd){						  p.vx *= - randSpeedX; 						  p.rotation = bounceRotation;					 }					 else if(!dAd){						  p.vx *=  randSpeedX; 						  p.rotation = -bounceRotation;					 }				}				if(interaction) {					var dx = p.x - mouse.x,						dy = p.y - mouse.y,						vx = -dy * -(mouse.speed + 1) + mouse.vx * 0.5,						vy = dx * -(mouse.speed + 1) + mouse.vy * 0.5,						factor = 1 / ((dx * dx + dy * dy) / 3)					p.vx += vx * factor;					p.vy += vy * factor;					}			},				});	});	// mouse interaction		var interaction = false;	var mouse = {x: 0, y: 0, vx: 0, vy: 0, speed: 0, lastX: 0, lastY: 0};	banner.addEventListener("mouseenter", function(e) {		mouse.x = e.clientX;		mouse.y = e.clientY;		mouse.lastX = mouse.x;		mouse.lastY = mouse.y;		interaction = true;	});	banner.addEventListener("mouseleave", function(e) {		interaction = false;	});		banner.addEventListener("scroll", function(e) {		mouse.wind = banner.scrollTop;		console.log("scroll top :", banner.scrollTop)	});		banner.addEventListener("mousemove", function(e) {		mouse.lastX = mouse.x;		mouse.lastY = mouse.y;		mouse.x = e.clientX;		mouse.y = e.clientY;		mouse.vx = mouse.x - mouse.lastX;		mouse.vy = mouse.y - mouse.lastY;		mouse.speed = Math.sqrt(mouse.vx * mouse.vx + mouse.vy * mouse.vy);	})}